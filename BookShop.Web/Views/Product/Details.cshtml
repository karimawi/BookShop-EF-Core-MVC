@model BookShop.Models.Product

@{
    ViewData["Title"] = "Product Details";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-eye"></i> Product Details</h1>
    <a asp-action="Index" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left"></i> Back to List
    </a>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h4><i class="fas fa-book"></i> @Model.Title</h4>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">
                        <i class="fas fa-heading"></i> Title
                    </dt>
                    <dd class="col-sm-9">
                        @Model.Title
                    </dd>
                    
                    <dt class="col-sm-3">
                        <i class="fas fa-align-left"></i> Description
                    </dt>
                    <dd class="col-sm-9">
                        @if (string.IsNullOrEmpty(Model.Description))
                        {
                            <em class="text-muted">No description provided</em>
                        }
                        else
                        {
                            @Model.Description
                        }
                    </dd>
                    
                    <dt class="col-sm-3">
                        <i class="fas fa-user"></i> Author
                    </dt>
                    <dd class="col-sm-9">
                        @Model.Author
                    </dd>
                    
                    <dt class="col-sm-3">
                        <i class="fas fa-dollar-sign"></i> Price
                    </dt>
                    <dd class="col-sm-9">
                        <span class="badge bg-success fs-6">$@Model.Price.ToString("F2")</span>
                    </dd>
                    
                    <dt class="col-sm-3">
                        <i class="fas fa-tag"></i> Category
                    </dt>
                    <dd class="col-sm-9">
                        <a asp-controller="Category" asp-action="Details" asp-route-id="@Model.Category.Id" class="text-decoration-none">
                            <span class="badge bg-primary">@Model.Category.CatName</span>
                        </a>
                    </dd>
                </dl>
                
                <div class="d-flex gap-2">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">
                        <i class="fas fa-edit"></i> Edit
                    </a>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-list"></i> Back to List
                    </a>
                    
                    <form asp-action="Delete" asp-route-id="@Model.Id" method="post" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="button" class="btn btn-danger delete-btn" 
                                data-id="@Model.Id" data-name="@Model.Title">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelector('.delete-btn').addEventListener('click', function(e) {
                e.preventDefault();
                
                const productId = this.getAttribute('data-id');
                const productName = this.getAttribute('data-name');
                
                Swal.fire({
                    title: 'Are you sure?',
                    text: `You are about to delete "${productName}". This action cannot be undone!`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Submit the form
                        this.closest('form').submit();
                    }
                });
            });
        });
    </script>
}
